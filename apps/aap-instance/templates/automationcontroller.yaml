{{- if not (empty .Values.aap.admin.password) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.aap.name }}-admin-password
  namespace: {{ .Values.aap.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.aap.name }}
    app.kubernetes.io/part-of: ansible-automation-platform
    app.kubernetes.io/managed-by: gitops
  annotations:
    argocd.argoproj.io/sync-wave: "0"
type: Opaque
stringData:
  password: {{ .Values.aap.admin.password | quote }}
---
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.aap.name }}-password-generator
  namespace: {{ .Values.aap.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.aap.name }}
    app.kubernetes.io/part-of: ansible-automation-platform
    app.kubernetes.io/managed-by: gitops
    component: password-generator
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ .Values.automation.serviceAccount }}
      containers:
      - name: password-generator
        image: {{ .Values.automation.image }}
        imagePullPolicy: {{ .Values.automation.pullPolicy }}
        command: ["bash", "-c"]
        args:
        - |
          {{- if empty .Values.aap.admin.password }}
          # Generate password only if secret doesn't exist and no password provided
          if ! oc get secret {{ .Values.aap.name }}-admin-password -n {{ .Values.aap.namespace }} >/dev/null 2>&1; then
            PASSWORD=$(openssl rand -base64 16)
            oc create secret generic {{ .Values.aap.name }}-admin-password \
              --from-literal=password="$PASSWORD" \
              -n {{ .Values.aap.namespace }}
            echo "Generated admin password for {{ .Values.aap.name }}"
          else
            echo "Admin password secret already exists"
          fi
          {{- else }}
          echo "Using provided admin password"
          {{- end }}
---
apiVersion: automationcontroller.ansible.com/v1beta1
kind: AutomationController
metadata:
  name: {{ .Values.aap.name }}
  namespace: {{ .Values.aap.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.aap.name }}
    app.kubernetes.io/part-of: ansible-automation-platform
    app.kubernetes.io/managed-by: gitops
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  create_preload_data: true
  route_tls_termination_mechanism: Edge
  ingress_type: Route
  loadbalancer_port: 80
  loadbalancer_protocol: http
  nodeport_port: 30080
  
  # Admin configuration
  admin_user: {{ .Values.aap.admin.username }}
  admin_email: {{ .Values.aap.admin.email }}
  admin_password_secret: {{ .Values.aap.name }}-admin-password
  
  # PostgreSQL configuration
  {{- if .Values.aap.database.external.enabled }}
  # External PostgreSQL configuration
  postgres_configuration_secret: {{ .Values.aap.database.external.secretName | default (printf "%s-postgres-configuration" .Values.aap.name) }}
  {{- else }}
  # Internal PostgreSQL configuration
  postgres_storage_requirements:
    requests:
      storage: {{ .Values.aap.database.internal.storage }}
    {{- if .Values.aap.storage.storageClass }}
    storageClassName: {{ .Values.aap.storage.storageClass }}
    {{- end }}
  
  postgres_resource_requirements:
    requests:
      cpu: {{ .Values.aap.database.internal.cpu }}
      memory: {{ .Values.aap.database.internal.memory }}
    limits:
      cpu: {{ .Values.aap.database.internal.cpu | replace "m" "" | int | mul 2 }}m
      memory: {{ .Values.aap.database.internal.memory | replace "Gi" "" | int | mul 2 }}Gi
  {{- end }}
  
  # Resource configuration
  web_resource_requirements:
    requests:
      cpu: {{ .Values.aap.resources.cpu }}
      memory: {{ .Values.aap.resources.memory }}
    limits:
      cpu: {{ .Values.aap.resources.cpu | replace "m" "" | int | mul 2 }}m
      memory: {{ .Values.aap.resources.memory | replace "Gi" "" | int | mul 2 }}Gi
  
  task_resource_requirements:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  
  ee_resource_requirements:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
